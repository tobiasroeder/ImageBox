/*
    ImageBox v1.3.0
    (c) Tobias Roeder
    tobiasroeder.github.io/imagebox/license
*/
var $jscomp = $jscomp || {}; $jscomp.scope = {}, $jscomp.createTemplateTagFirstArg = function (e) { return e.raw = e }, $jscomp.createTemplateTagFirstArgWithRaw = function (e, t) { return e.raw = t, e }; var imagebox = { init: function () { imagebox.settings.info && console.log("%cImageBox v1.3.0\nhttps://tobiasroeder.github.io/imagebox", "color:#39c"), imagebox.settings.keyControls && (window.onkeyup = function (e) { if (document.body.classList.contains("imagebox")) switch (e.keyCode) { case 27: imagebox.close(); break; case 37: (e = document.querySelector(".ib-control-left")) && e.click(); break; case 39: (e = document.querySelector(".ib-control-right")) && e.click() } }), imagebox.finder() }, galleryNames: [], galleries: [], finder: function () { document.querySelectorAll("img[data-imagebox]").forEach((function (e) { var t = e.dataset.imagebox; e.setAttribute("onclick", "imagebox.open(this)"), "" !== t && (imagebox.galleryNames.includes(t) || imagebox.galleryNames.push(t)) })), imagebox.galleryNames.forEach((function (e) { e = document.querySelectorAll('[data-imagebox="' + e + '"]'), imagebox.galleries.push(e) })), imagebox.galleries.forEach((function (e, t) { e.forEach((function (e, i) { e.setAttribute("data-imagebox-image-index", i), e.setAttribute("data-imagebox-gallery-index", t) })) })) }, settings: { info: !1, swipeToChange: !0, swipeToClose: !0, keyControls: !0, closeEverywhere: !0 }, options: function (e) { var t = void 0 === e.swipeToChange || e.swipeToChange, i = void 0 === e.swipeToClose || e.swipeToClose, o = void 0 === e.keyControls || e.keyControls, a = void 0 === e.closeEverywhere || e.closeEverywhere; imagebox.settings.info = void 0 !== e.info && e.info, imagebox.settings.swipeToChange = t, imagebox.settings.swipeToClose = i, imagebox.settings.keyControls = o, imagebox.settings.closeEverywhere = a }, open: function (e) { var t, i = !0, o = e.dataset.imagebox; "image" !== o && "" !== o || (i = !1), o = null, document.body.classList.add("imagebox"), null == document.querySelector("#imagebox") && ((o = document.createElement("div")).setAttribute("id", "imagebox"), o.setAttribute("class", "ib-remove"), document.body.appendChild(o)), o = null != (t = e.dataset.imageboxSrc) ? t : e.src, t = document.querySelector("#imagebox"); var a = "", n = "", c = "", s = ""; if (i) { n = parseInt(e.dataset.imageboxImageIndex), a = parseInt(e.dataset.imageboxGalleryIndex); var r = "", l = ""; 0 == n && (r = "disabled"), n == (c = imagebox.galleries[a].length) - 1 && (l = "disabled"), a = '<div class="ib-control">\n\t\t\t\t\t<div class="ib-control-left" onclick="imagebox.prev(' + n + ", " + a + ')" ' + r + '></div>\n\t\t\t\t\t<div class="ib-control-right" onclick="imagebox.next(' + n + ", " + a + ')" ' + l + "></div>\n\t\t\t\t</div>", n = '<div class="ib-indexes">\n\t\t\t\t\t<span class="ib-current-index">' + (n + 1) + '</span> / <span class="ib-last-index">' + c + "</span>\n\t\t\t\t</div>", c = '<img src="" class="ib-image ib-image-next ib-hidden">' } else imagebox.settings.closeEverywhere && (s = ' onclick="imagebox.close(this)"'); t.innerHTML = '<div class="ib-loading"></div>\n\t\t\t<div class="ib-content"' + s + '>\n\t\t\t\t<div class="ib-topbar">' + n + '\n\t\t\t\t\t<div class="ib-buttons">\n\t\t\t\t\t\t<div class="ib-close ib-button" onclick="imagebox.close()"></div>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t\t' + a + '\n\t\t\t\t<div class="ib-image-wrapper">\n\t\t\t\t\t<img src="' + o + '" class="ib-image ib-image-current">\n\t\t\t\t\t' + c + '\n\t\t\t\t</div>\n\t\t\t\t<div class="ib-caption">Lorem Ipsum</div>\n\t\t\t</div>', imagebox.caption(e), imagebox.fade.in(t), document.querySelector("#imagebox .ib-image").onload = function () { document.querySelector("#imagebox .ib-loading").style.opacity = "0", document.querySelector("#imagebox .ib-image-wrapper").style.opacity = "1" }, imagebox.swipe(document.querySelector("#imagebox .ib-content"), i) }, close: function () { document.body.classList.remove("imagebox"); var e = document.querySelector("#imagebox"); e.classList.remove("ib-remove"), imagebox.fade.out(e) }, change: function (e, t, i) { var o = document.querySelector("#imagebox .ib-loading"), a = imagebox.galleries[t].length, n = document.querySelector("img[data-imagebox-image-index='" + e + "'][data-imagebox-gallery-index='" + t + "']"), c = document.querySelector("#imagebox .ib-control-left"), s = document.querySelector("#imagebox .ib-control-right"), r = document.querySelector("#imagebox .ib-current-index"); o.style.opacity = "1", "prev" == i && (0 == e && c.setAttribute("disabled", ""), s.removeAttribute("disabled")), "next" == i && (e == a - 1 && s.setAttribute("disabled", ""), c.removeAttribute("disabled")), c.setAttribute("onclick", "imagebox.prev(" + e + ", " + t + ")"), s.setAttribute("onclick", "imagebox.next(" + e + ", " + t + ")"), r.innerText = e + 1; var l, m = document.querySelector("#imagebox .ib-image-next"), b = document.querySelector("#imagebox .ib-image-current"); b.classList.add("ibFadeOut"), m.src = null != (l = n.dataset.imageboxSrc) ? l : n.src, imagebox.caption(n), m.onload = function () { m.classList.add("ibFadeIn"), o.style.opacity = 0, setTimeout((function () { b.className = "ib-image ib-hidden ib-image-next", b.src = "", m.className = "ib-image ib-image-current" }), 600) } }, prev: function (e, t) { 0 != e && (e = 0 >= e ? e = 0 : e - 1, imagebox.change(e, t, "prev")) }, next: function (e, t) { var i = imagebox.galleries[t].length - 1; e != i && (e = e >= i ? e = i : e + 1, imagebox.change(e, t, "next")) }, caption: function (e) { e = e.getAttribute("data-imagebox-caption"); var t = document.querySelector("#imagebox .ib-caption"); (t.textContent = e) ? (-1 < e.indexOf("{loc}") ? (t.classList.add("location"), e = e.replace(/{loc}/, ""), t.textContent = e) : t.classList.remove("location"), t.style.display = "block") : t.style.display = "none" }, swipe: function (e, t) { e && (e.ontouchstart = function (i) { var o = i.layerX, a = i.layerY; e.ontouchend = function (e) { var i = o - e.layerX; e = a - e.layerY; var n = window.innerWidth / 10, c = window.innerHeight / 10; imagebox.settings.swipeToClose && (e >= c || e <= -c) && imagebox.close(), t && imagebox.settings.swipeToChange && (i >= n && document.querySelector("#imagebox .ib-control-right").click(), i <= -n && document.querySelector("#imagebox .ib-control-left").click()) } }) }, fade: { duration: .1, out: function (e, t, i) { t = void 0 !== t && t, e.style.opacity = 1, function o() { var a = parseFloat(e.style.opacity); 0 > (a -= imagebox.fade.duration) ? (i && i(), t && document.querySelector("#imagebox .ib-image-wrapper").removeChild(e), e.style.display = "none") : (e.style.opacity = a, requestAnimationFrame(o)) }() }, in: function (e, t) { e.style.opacity = 0, e.style.display = "block", function i() { var o = parseFloat(e.style.opacity); 1 < (o += imagebox.fade.duration) ? t && t() : (e.style.opacity = o, requestAnimationFrame(i)) }() } } }; window.onload = imagebox.init;